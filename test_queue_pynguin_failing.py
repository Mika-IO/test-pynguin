# Automatically generated by Pynguin.
import queue_pynguin as module_0


def test_case_0():
    try:
        queue_0 = module_0.Queue()
        assert queue_0.queue == []
        var_0 = queue_0.dequeue()
    except BaseException:
        pass


def test_case_1():
    try:
        int_0 = 2835
        queue_0 = module_0.Queue()
        assert queue_0.queue == []
        var_0 = queue_0.enqueue(int_0)
        assert queue_0.queue == [2835]
        var_1 = queue_0.size()
        var_2 = queue_0.is_empty()
        assert var_2 is False
        var_3 = queue_0.dequeue()
        assert var_3 == 2835
        assert queue_0.queue == []
        assert var_0 is None
        queue_1 = module_0.Queue()
        assert queue_1.queue == []
        bool_0 = True
        var_4 = queue_1.is_empty()
        assert var_4 is True
        queue_2 = module_0.Queue()
        assert queue_2.queue == []
        var_5 = queue_2.enqueue(bool_0)
        assert queue_2.queue == [True]
        assert var_5 is None
        var_6 = queue_1.dequeue()
    except BaseException:
        pass


def test_case_2():
    try:
        queue_0 = module_0.Queue()
        assert queue_0.queue == []
        var_0 = queue_0.peek()
    except BaseException:
        pass


def test_case_3():
    try:
        str_0 = '"f!T*h$24W[cE_\n\nDXf'
        queue_0 = module_0.Queue()
        assert queue_0.queue == []
        var_0 = queue_0.enqueue(str_0)
        assert queue_0.queue == ['"f!T*h$24W[cE_\n\nDXf']
        queue_1 = module_0.Queue()
        assert queue_1.queue == []
        var_1 = queue_1.peek()
    except BaseException:
        pass
